#!/bin/bash
#
# 2014 ShoelaceGuy <beast123113 at gmail dot com>
# ScrotUM (SCReen shOT Upload Manager)
#
# Licensed under WTFPL 2.0
# >> http://www.wtfpl.net/txt/copying/
#

DZEN2="$(pidof dzen2)"
SLEEP=1
CONFDIR=~/.ScrotUM
VER=1.0

echo "Loading config!"
source "$CONFDIR/config"

RESX=$(xdpyinfo  | grep 'dimensions:' | tr ' ' '\n' | grep -m1 x | tr 'x' '\n' | grep -m1 '')
RESY=$(xdpyinfo  | grep 'dimensions:' | tr ' ' '\n' | grep -m1 x | tr 'x' '\n' | grep -m2 '' | tail -n1)
THUMBPOSY=$(expr 0 + $THUMBPADY)
THUMBPOSX=$(expr $RESX - $THUMBWIDTH - $THUMBPADX)
NOTIFPOSX=$(expr $RESX - $THUMBWIDTH)
NOTIFPOSY=$THUMBHEIGHT
SAVEAS="/home/$USER/$SAVEPATH/Screenshot_$FILENAME.png"
SHOWTHUMB=%1%2%3%4%5%6%7%8%9 | grep -o t
SHOWNOTIF=%1%2%3%4%5%6%7%8%9 | grep -o n
MODE=%1%2%3%4%5%6%7%8%9 | grep -o 'r\|w'

# Help
if [[ $1 = "-h" ]]; then
echo "Usage : ScrotUM [-tnwrhvc] [-d path] [-s screen] [-u uploader] [filename.png]
    -d path     : save the shot in <path>
    -s screen   : use only the screen number <screen> for the shot
    -u uploader : upload the file using specified uploader, or <$UPLOADER> if none passed
    -t          : hide thumbnail
    -n          : hide notification
    -w          : take scrot of a specific window (choose with pointer)
    -r          : take scrot of a specific region (choose with pointer)
    -c          : check for updates
    -h          : display this help
    -v          : display version info

Configuration:
    ScrotUM sources /home/$USER/.ScrotUM/config at start.
    You can pass arguments here, so that they will overide the sourced preferences."
exit
fi

if [[ $1 = "-s" ]] && [ -z ${2+x} ]; then
echo "Usage : ScrotUM [-s screen]
Description:
    Only scrot the specified screen number, then upload as defined."
exit
fi

if [[ $1 = "-d" ]] && [ -z ${2+x} ]; then
echo "Usage : ScrotUM [-d path]
Description:
    Save the scrot to a specified directory."
exit
fi

if [[ $1 = "-u" ]] && [ -z ${2+x} ]; then
echo "Usage : ScrotUM [-d path]
Description:
    Upload using the specified uploader. Available options are: imgur, ftp, sftp."
exit
fi

if [[ $1 = "-v" ]]; then
echo "ScrotUM $VER"
exit
fi

# Args
if [[ $1 = "-r" ]]; then
echo "Range mode enabled!"
import root $SAVEAS
fi

if [[ $1 = "-w" ]]; then
echo "Window mode enabled!"
import -window $(xdotool selectwindow) $SAVEAS
fi

if [[ $1 = "-c" ]]; then
echo "Checking for updates, and updating!"
  git pull
fi

# Command
if  [ -z ${MODE+x} ]; then
scrot -c "$SAVEAS"
echo "Captured as $SAVEAS!"
fi

# Thumbnail
if [ $SHOWTHUMB = "yes" ]; then
convert $SAVEAS -resize $THUMBHEIGHTx$THUMBWIDTH /tmp/ScrotUMThumb.xpm
echo "^i(/tmp/ScrotUMThumb.xpm)" | dzen2 -p -bg $BG -fg $YELLOW -y $THUMBPOSY -x $THUMBPOSX -fn $FONT -w $THUMBWIDTH -h $THUMBHEIGHT -ta l -e "onstart=uncollapse;button2=exit" &
fi

if [ $SHOWNOTIF = "yes" ]; then
echo " ^fg($WHITE)Uploading...
^ib(2)^fg($BLUE)"Screenshot saved as "$FILENAME"!"^pa(2)" | dzen2 -p -bg $BG -fg $YELLOW -y $NOTIFPOSY -x $NOTIFPOSX -fn $FONT -l 1 -w $THUMBWIDTH -ta l -e 'onstart=uncollapse;button3=exit' -p 7 &
fi

# Uploader
if [[ $UPLOADER = "imgur" ]]; then
    for i in "$SAVEAS"; do
        curl -# -F "image"=@"$i" -F "key"="4907fcd89e761c6b07eeb8292d5a9b2a" imgur.com/api/upload.xml|\
        grep -Eo '<[a-z_]+>http[^<]+'|sed 's/^<.\|_./\U&/g;s/_/ /;s/<\(.*\)>/\x1B[0;34m\1:\x1B[0m /'
    done > /tmp/ScrotUM
    grep -o -m1 "http://.*imgur.*" /tmp/ScrotUM | xclip -sel c
    grep -o -m1 "http://.*imgur.*" /tmp/ScrotUM | xclip
    cat /tmp/ScrotUM
fi

if [[ $UPLOADER = "ftp" ]]; then
    wput $SAVEAS ftp://$FTPUSERNAME:$FTPPASSWD@$FTPIP:$FTPPORT/$FTPDIRECTORY > /tmp/ScrotUM
fi

if [[ $UPLOADER = "sftp" ]] && [ $SFTP_USE_KEY = "yes" ]; then
    scp -i $SFTPKEYFILE -P $SFTPPORT $SAVEFILE $SFTPUSERNAME@$SFTPIP:$SFTPDIRECTORY > /tmp/ScrotUM
fi
if [[ $UPLOADER = "sftp" ]] && [ $SFTP_USE_KEY != "yes" ]; then
    sshpass -p '$SFTPPASSWORD' scp -P $SFTPPORT $SAVEFILE $SFTPUSERNAME@$SFTPIP:$SFTPDIRECTORY > /tmp/ScrotUM
fi


# Notifier
while [ $UPLOADER = "imgur" ] && [ $SHOWNOTIF = "yes" ]; do

# Message    
    echo "^fg($WHITE) $(grep -o 'Original Image:' /tmp/ScrotUM) ^fg($OFFWHITE)^pa(150)$(grep -o -m1 "http://.*imgur.*" /tmp/ScrotUM | tail -n1) 
^fg($WHITE) Large Thumbnail: ^fg($OFFWHITE)^pa(150)$(grep -o -m2 "http://.*imgur.*" /tmp/ScrotUM | tail -n1) 
^fg($WHITE) Small Thumbnail: ^fg($OFFWHITE)^pa(150)$(grep -o -m3 "http://.*imgur.*" /tmp/ScrotUM | tail -n1) ^pa(117)
^fg($WHITE) Imgur Page: ^fg($OFFWHITE)^pa(150)$(grep -o -m4 "http://.*imgur.*" /tmp/ScrotUM | tail -n1) ^pa(117)
^fg($WHITE) Delete Page: ^fg($OFFWHITE)^pa(150)$(grep -o -m5 "http://.*imgur.*" /tmp/ScrotUM | tail -n1) ^pa(117)
^ib(2)^fg($BLUE)"Screenshot saved as "$FILENAME"!"^pa(2)" 

    done | dzen2 -p -bg $BG -fg $YELLOW -y $NOTIFPOSY -x $NOTIFPOSX -fn $FONT -l 5 -w $THUMBWIDTH -ta l -e 'onstart=uncollapse;button3=exit' -p 7 &

while [ $UPLOADER = "ftp" ] && [ $SHOWNOTIF = "yes" ]; do
    # Message
    
    echo "^fg($WHITE) "Uploaded To:" ^fg($OFFWHITE)^pa(150)$( grep ftp:// /tmp/ScrotUM | tr ' ' '\n' | grep ftp://) 
^ib(2)^fg($BLUE)"Screenshot saved as "$FILENAME"!"^pa(2)"

    done | dzen2 -p -bg $BG -fg $YELLOW -y $NOTIFPOSY -x $NOTIFPOSX -fn $FONT -l 1 -w $THUMBWIDTH -ta l -e 'onstart=uncollapse;button3=exit' -p 7 &

while [ $UPLOADER = "sftp" ] && [ $SHOWNOTIF = "yes" ]; do
    # Message
    
    echo "^ib(2)^fg($BLUE)"Screenshot saved as "$FILENAME"!"^pa(2)"

    done | dzen2 -p -bg $BG -fg $YELLOW -y $NOTIFPOSY -x $NOTIFPOSX -fn $FONT -w $THUMBWIDTH -ta l -e 'onstart=uncollapse;button3=exit' -p 7 &

# Cleaner
if [ $KEEPCOPY = "no" ]; then
rm -rf $SAVEAS
fi

# Kill
if [[ "$DZEN2" -gt 0 ]];
then
    sleep $KILLDELAY && rm -rf /tmp/ScrotU* && exit
else
    sleep $KILLDELAY && killall dzen2 & exit
fi
