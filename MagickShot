#!/bin/bash
#
# 2017 Trent Arcuri <trent.arcuri@gmail.com>
# MagickShot
#

confdir=~/.MagickShot
ver=3.1

echo "Loading config!"
source "$confdir/config"

resx=$(xdpyinfo  | grep 'dimensions:' | sed 's/x/ /' | awk '{print $2}')
resy=$(xdpyinfo  | grep 'dimensions:' | sed 's/x/ /' | awk '{print $3}')
saveas="$HOME/$savepath/Screenshot_$filename.$format"
thumbfile=$(mktemp --suffix=.xpm)
outfile=$(mktemp)

usage()
{
  echo """Usage: $(basename $0) [<arguments>]
      -o <path>       Save screenshot in <path>
      -s <screen>     Take screenshot of a specific screen
      -u <uploader>   Upload the file using specified uploader
      -t              Hide thumbnail
      -w              Take screenshot of a specific window
      -r              Take screenshot of a specific region
      -d              Take screenshot of the entire display server
      -h              Display this help dialogue
      -v              Display version info"""
}

cleanup()
{
  rm $thumbfile $outfile
  if [ $keepcopy = "no" ]; then
    rm -rf $saveas
  fi
}

default()
{
  import -window root "$saveas"
  echo "Captured as $saveas!"
}

range()
{
  echo "Range mode enabled!"
  if import $saveas; then
    :
  else
    exit 1
  fi
}

window()
{
  echo "Window mode enabled!"
  if import -window $(xdotool selectwindow) $saveas; then
    :
  else
    exit 1
  fi
}

thumbnail()
{
  if [ $showthumb = "yes" ]; then
    convert $saveas -scale "$thumbwidth" $thumbfile
    dzenthumbopts+=(
    "-w $(identify -format "%w" $thumbfile)"
    "-h $(identify -format "%h" $thumbfile)"
    )
    echo "^i($thumbfile)" | dzen2 ${dzenthumbopts[@]}
  fi

}

upload()
{
  for i in "$saveas"; do
    $uploader
  done | tee $outfile
  echo "Uploading complete!"
  cat $outfile | awk '{print $2}' | $clipboard
}

main()
{
  #Argument parsing
  if [[ -z $@ ]]; then
    usage
    exit 1
  fi

  local argv=("$@");
  # argc is the count of arguments
  local argc=${#argv[@]};

  # this is important to ensure globbing is active
  shopt -s extglob;

  # Handle compressed short options
  re="(^| )\\-[[:alnum:]]{2,}"; # regex to detect shortoptions
  # we evaluate this as a long string, thus ${argv[*]}, instead of ${argv[@]}
  if [[ "${argv[*]}" =~ $re ]]; then
    local compiled_args=();
    for ((i=0; i<argc; i++)); do
      if [[ "${argv[$i]}" =~ $re ]]; then
        local compressed_args="${argv[$i]#*-}";
        for ((r=0; r<${#compressed_args}; r++)); do compiled_args+=("-${compressed_args:$r:1}");
        done
        shift;
        compiled_args+=("$@");
        ## recurse
        premain "${compiled_args[@]}";
        ## we "pass" the exit code back up the recursions to the OS
        exit $?;
      fi
      compiled_args+=("${argv[$i]}");
      shift;
    done
    exit;
  fi

  while [ "$1" != ""  ]; do
    case "$1" in
      '-h')
        usage
        exit
        ;;
      '-v')
        echo "MagickShot $VER"
        exit
        ;;
      '-t')
        echo "Hiding thumbnail!"
        showthumb=no
        ;;
      '-s')
        shift
        :
        ;;
      '-o','--output')
        shift
        saveas=$1
        ;;
      '-u','--uploader')
        shift
        uploader=$1
        ;;
      '-r')
        range
        ;;
      '-w')
        window
        ;;
      '-d')
        default
        ;;
      -?*)
        printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
    esac
    shift
  done

  # First make directories
  mkdir -p $HOME/$savepath/

  # Thumbnail in parallel
  thumbnail&
  upload

  #Cleanup
  cleanup
}

main "$@"
